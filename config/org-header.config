# -*- mode: org; -*-
# Header Arguments Template
# GENERAL
# Export both src and result by default. Use noweb. Wrap results in example block. Tangling will add a link to this file.
#+PROPERTY: header-args :dir .. :output-dir .. :mkdirp yes :exports both :noweb yes :results output replace :wrap example :comments link :cache yes
# PYTHON
#+PROPERTY: header-args:python :session Python
# ELISP
#+PROPERTY: header-args:elisp :results value silent :exports none
# SHELL
#+PROPERTY: header-args:shell
# SQL
# https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-sql.html
#+PROPERTY: header-args:sql :engine postgresql :dbhost localhost :dbuser postgres :database pagila
# SQLITE
# https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-sqlite.html
#+PROPERTY: header-args:sqlite
# JS
#+PROPERTY: header-args:js
# TS
# Result is a Javascript file. :results silent value file
#+PROPERTY: header-args:typescript
# GO
#+PROPERTY: header-args:go
# C
#+PROPERTY: header-args:C :includes <stdlib.h> <stdio.h> <ctype.h> <assert.h> :flags -Wall -Werror -std=gnu99 -g -I . :main no
# HTML
# Skip evaluating HTML.
#+PROPERTY: header-args:html :eval no

* Post-Processing

#+NAME: ts-to-js
#+begin_src js :var data="var x = 2; console.log(x + 1);"
eval?.(`"use strict"; ()=>{${data}}`)();
#+end_src

#+NAME: str-to-link
#+begin_src elisp :var data="" width=500
(concat "#+attr_html: :width " (number-to-string width) "\n" "[[" data "]]")
#+end_src

#+NAME: add-to-library
#+begin_src elisp
(org-babel-lob-ingest "./org-header.config")
#+end_src
